@if (!IsTable && Game != null)
{
    <div class="row text-center alert-info">
        <div class="col p-3">
            <p>@Game.Name</p>
            <p>@Game.Genre</p>
            <p>@Game.ReleaseDate.ToString("dd.MM.yyyy")</p>

            @if (DisplayButtons)
            {
                <div class="row">
                    <div class="col">
                        <button class="btn btn-primary" @onclick="SwitchGame">Switch</button>

                    </div>
                </div>
            }
            @if (Game.Name.Equals("The Witcher 3") && AppStyle.WitcherWords != null)
            {
                <div class="row mt-3">
                    <div class="col alert alert-light text-center">
                        @AppStyle.WitcherWords[rnd.Next(0, AppStyle.WitcherWords.Count)]
                    </div>
                </div>
            }
        </div>
    </div>
}
else
{
    if (Game != null)
    {
        <tr>
            <td>@Game.Name</td>
            <td>@Game.Genre</td>
            <td>@Game.ReleaseDate.ToString("dd.MM.yyyy")</td>
            <td>
                @if (DisplayButtons)
                {
                    <button class="btn btn-danger" @onclick="(() => DeleteGame.InvokeAsync(Game))">Delete</button>
                }
            </td>
        </tr>
    }
}

@code {
    [Parameter] public Game Game { get; set; }
    [Parameter] public bool IsTable { get; set; }

    [Parameter] public bool DisplayButtons { get; set; } = false;

    [Parameter] public EventCallback<Game> DeleteGame { get; set; }
    [Parameter] public EventCallback SwitchGame { get; set; }

    [CascadingParameter] public AppStyle AppStyle { get; set; }

    Random rnd = new Random(DateTime.Now.Millisecond);
}

